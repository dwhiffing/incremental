{"version":3,"sources":["constants.js","resources/constants.js","buildings/constants.js","commands/constants.js","jobs/constants.js","science/constants.js","tabs/constants.js","selectors.js","resources/selectors.js","utils.js","resources/reducer.js","buildings/reducer.js","commands/reducer.js","science/reducer.js","jobs/reducer.js","reducer.js","storeContext.js","buildings/selectors.js","buildings/BuildingList.js","commands/selectors.js","commands/CommandList.js","jobs/selectors.js","jobs/JobList.js","science/selectors.js","science/ScienceList.js","tabs/ForestView.js","tabs/FieldView.js","tabs/HillView.js","resources/ResourceList.js","tabs/selectors.js","tabs/TabList.js","index.js"],"names":["data","resources","name","value","max","color","visible","effects","type","payload","useMultiplier","unlockRequirements","wood","stone","integer","buildings","ratio","prices","tab","food","plot","silo","commands","jobs","folks","woodmill","mine","science","labels","tabs","url","hut","INITIAL_MODELS","unlocks","getModel","state","modelName","instanceName","find","_ref","getModelIndex","findIndex","_ref2","getUnlock","getEffect","concat","filter","s","map","effectable","effect","Object","objectSpread","parent","multiplier","flat","getEffects","getMaxValue","model","Number","MAX_SAFE_INTEGER","reduce","total","_effect$payload","getNextCostForModel","obj","entries","forEach","_ref6","_ref7","slicedToArray","resource","price","Math","pow","getCanAffordModel","_ref8","_ref9","resourceName","_ref10","length","getResource","getResources","getUnlockedResources","getEffectTotal","effectName","_ref2$payload$value","_ref2$multiplier","getResourceDiffPerTick","_ref3","_ref4","_ref4$payload","_ref4$payload$useMult","_ref4$payload$integer","ceil","getResourcesGainedPerTick","_ref5","getFoodDrain","abs","clamp","n","min","updateSlice","key","updates","negated","arguments","undefined","updateToPush","defineProperty","loadSlice","update","toConsumableArray","index","updateResources","_len","args","Array","_key","apply","resourcesReducer","perTick","u","building","buildingsReducer","updateBuildings","commandsReducer","action","scienceReducer","updateScience","jobsReducer","_action$payload","updateJobs","initialState","reducer","reducers","nextReducers","combineReducers","localStorage","setItem","JSON","stringify","possibleUnlocks","unlockable","possibleUnlock","getNewUnlocks","StoreContext","createContext","connect","mapStateToProps","mapDispatchToProps","Component","props","react_default","a","createElement","Consumer","dispatch","assign","getUnlockedBuildings","canAfford","isMaxed","getBuildings","Building","onClick","className","style","toFixed","buyBuilding","BuildingList_Building","getUnlockedCommands","command","summary","getCommandSummary","getCommandAffordable","getCommands","upgradeValue","e","prev","isArray","resourceKey","getCommandPrices","_ref11","_ref12","sample","arr","floor","random","Command","_ref2$color","_ref2$canAfford","triggerCommand","amount","getEffectsForCommand","CommandList_Command","getUnlockedJobs","job","getJobSummary","getAvailableWorkers","getJobs","getTotalWorkers","num","parseInt","curr","getNumWorkers","Job","opacity","marginRight","availableWorkers","totalWorkers","foodDrain","Fragment","JobList_Job","getUnlockedScience","getScienceSummary","getScienceAffordable","isPurchased","getSciences","join","ScienceItem","buyScience","ScienceList_ScienceItem","forestView","CommandList","BuildingList","JobList","ScienceList","FieldView","hillView","Resource","perSecond","marginTop","marginLeft","fontSize","ResourceList_Resource","getUnlockedTabs","getTabs","react_router_dom","to","window","confirm","removeItem","document","location","reload","ReactDOM","render","children","_useReducer","useReducer","_useReducer2","useEffect","saveString","getItem","save","parse","setInterval","Provider","flex","padding","tabs_TabList","ResourceList","react_router","exact","path","component","Forest","Field","Hill","getElementById"],"mappings":"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","file":"static/js/main.e987c315.chunk.js","sourcesContent":["import resources from './resources/constants'\nimport buildings from './buildings/constants'\nimport commands from './commands/constants'\nimport jobs from './jobs/constants'\nimport science from './science/constants'\nimport tabs from './tabs/constants'\n\nconst data = {\n  resources,\n  buildings,\n  commands,\n  jobs,\n  science,\n  tabs,\n}\n\nexport default data\n\nexport const INITIAL_MODELS = {\n  resources: [],\n  buildings: [],\n  commands: [],\n  jobs: [],\n  science: [],\n  tabs: [],\n  unlocks: [],\n}\n","export const CHEAT_FACTOR = 2\n\nexport default [\n  {\n    // title, type(common, rare, etc), visible, calculatePerTick, color\n    name: 'food',\n    value: 50,\n    max: 0,\n    color: '#e6cc3b',\n    visible: true,\n    effects: [\n      {\n        type: 'resourcePerTick',\n        payload: { name: 'folks', value: 0.01, useMultiplier: false },\n      },\n    ],\n  },\n  {\n    name: 'wood',\n    value: 0,\n    unlockRequirements: { wood: 0.01 },\n    color: '#b7612c',\n    max: 0,\n  },\n  {\n    name: 'stone',\n    value: 0,\n    unlockRequirements: { stone: 0.01 },\n    color: '#999999',\n    max: 0,\n  },\n  {\n    name: 'folks',\n    value: 1,\n    color: 'purple',\n    max: 0,\n    effects: [\n      {\n        type: 'resourcePerTick',\n        payload: { name: 'food', value: -0.8 / CHEAT_FACTOR, integer: true },\n      },\n      {\n        type: 'resourcePerTick',\n        payload: { name: 'folks', value: -0.005, useMultiplier: false },\n      },\n    ],\n  },\n]\n","export default [\n  {\n    name: 'baskets',\n    value: 1,\n    max: 10,\n    ratio: 1,\n    prices: { wood: 10 },\n    tab: 'forest',\n    effects: [\n      { type: '+max', payload: { name: 'food', value: 100 } },\n      { type: '+max', payload: { name: 'wood', value: 10 } },\n    ],\n  },\n  {\n    name: 'hut',\n    value: 1,\n    prices: { wood: 50 },\n    ratio: 1,\n    max: 5,\n    tab: 'forest',\n    effects: [{ type: '+max', payload: { name: 'folks', value: 1 } }],\n  },\n  {\n    name: 'plot',\n    tab: 'field',\n    max: 5,\n    value: 0,\n    ratio: 1,\n    prices: { food: 500, wood: 100 },\n    effects: [{ type: '+max', payload: { name: 'farmer', value: 1 } }],\n  },\n  {\n    name: 'silo',\n    tab: 'field',\n    max: 10,\n    value: 0,\n    ratio: 1,\n    prices: { wood: 100 },\n    unlockRequirements: { plot: 2 },\n    effects: [{ type: '+max', payload: { name: 'food', value: 250 } }],\n  },\n  {\n    name: 'box',\n    tab: 'forest',\n    max: 5,\n    value: 0,\n    ratio: 1,\n    prices: { wood: 100 },\n    unlockRequirements: { silo: 1 },\n    effects: [\n      { type: '+max', payload: { name: 'wood', value: 50 } },\n      { type: '+max', payload: { name: 'stone', value: 10 } },\n    ],\n  },\n  {\n    name: 'mine',\n    tab: 'hill',\n    max: 5,\n    value: 0,\n    ratio: 1,\n    prices: { wood: 300 },\n    unlockRequirements: { wood: 300 },\n    effects: [{ type: '+max', payload: { name: 'miner', value: 1 } }],\n  },\n  {\n    name: 'woodmill',\n    tab: 'forest',\n    max: 5,\n    value: 0,\n    ratio: 1,\n    prices: { stone: 10 },\n    unlockRequirements: { stone: 1 },\n    effects: [{ type: '+max', payload: { name: 'lumberjack', value: 1 } }],\n  },\n]\n","export default [\n  // {\n  //   name: 'scavenger',\n  //   color: '#e6cc3b',\n  //   tab: 'forest',\n  //   effects: [\n  //     {\n  //       type: 'updateResources',\n  //       payload: {\n  //         food: [0.625, 0.8, 1.25],\n  //       },\n  //     },\n  //   ],\n  // },\n]\n","export default [\n  {\n    name: 'hunter',\n    value: 0,\n    tab: 'forest',\n    unlockRequirements: { folks: 1 },\n    effects: [\n      { type: 'resourcePerTick', payload: { name: 'food', value: 1.2 } },\n    ],\n  },\n  {\n    name: 'scavenger',\n    value: 0,\n    tab: 'forest',\n    unlockRequirements: { folks: 1 },\n    effects: [\n      { type: 'resourcePerTick', payload: { name: 'wood', value: 0.03 } },\n    ],\n  },\n  {\n    name: 'farmer',\n    value: 0,\n    max: 0,\n    tab: 'field',\n    unlockRequirements: { plot: 1 },\n    effects: [{ type: 'resourcePerTick', payload: { name: 'food', value: 2 } }],\n  },\n  {\n    name: 'lumberjack',\n    value: 0,\n    max: 0,\n    tab: 'forest',\n    unlockRequirements: { woodmill: 1 },\n    effects: [{ type: 'resourcePerTick', payload: { name: 'wood', value: 1 } }],\n  },\n  {\n    name: 'miner',\n    value: 0,\n    max: 0,\n    tab: 'hill',\n    unlockRequirements: { mine: 1 },\n    effects: [\n      { type: 'resourcePerTick', payload: { name: 'stone', value: 0.1 } },\n    ],\n  },\n]\n","export default [\n  {\n    name: 'hunter+',\n    tab: 'forest',\n    labels: ['spear'],\n    max: 1,\n    prices: { wood: 1 },\n    unlockRequirements: { wood: 0.5 },\n    value: 0,\n    effects: [\n      { type: 'improveJob', payload: { name: 'hunter', value: 1.334 } },\n    ],\n  },\n  {\n    name: 'scavenger+',\n    labels: ['rucksack', 'bigger rucksack'],\n    max: 2,\n    tab: 'forest',\n    ratio: 8,\n    prices: { wood: 4 },\n    unlockRequirements: { wood: 2 },\n    value: 0,\n    effects: [{ type: 'improveJob', payload: { name: 'scavenger', value: 5 } }],\n  },\n  {\n    name: 'farmer+',\n    labels: ['fertilizer', 'bigger rucksack'],\n    max: 2,\n    tab: 'field',\n    ratio: 8,\n    prices: { food: 1500, wood: 250 },\n    unlockRequirements: { plot: 3 },\n    value: 0,\n    effects: [{ type: 'improveJob', payload: { name: 'farmer', value: 1.5 } }],\n  },\n  {\n    name: 'lumberjack+',\n    labels: ['iron axe', 'steel axe'],\n    max: 2,\n    tab: 'forest',\n    ratio: 8,\n    prices: { stone: 10, wood: 100 },\n    unlockRequirements: { stone: 1 },\n    value: 0,\n    effects: [\n      { type: 'improveJob', payload: { name: 'lumberjack', value: 1.5 } },\n    ],\n  },\n]\n","export default [\n  {\n    name: 'forest',\n    url: '',\n  },\n  {\n    name: 'field',\n    url: 'field',\n    unlockRequirements: {\n      hut: 5,\n    },\n  },\n  {\n    name: 'hill',\n    url: 'hill',\n    unlockRequirements: {\n      food: 1500,\n    },\n  },\n]\n","export const getModel = (state, modelName, instanceName) =>\n  state[modelName].find(({ name }) => name === instanceName)\n\nexport const getModelIndex = (state, modelName, instanceName) =>\n  state[modelName].findIndex(({ name }) => name === instanceName)\n\nexport const getUnlock = (state, name) => getModel(state, 'unlocks', name)\n\nexport const getEffects = state => {\n  return state.buildings\n    .concat(state.jobs)\n    .concat(state.resources)\n    .concat(state.science.filter(s => s.value > 0))\n    .map(effectable => {\n      const effects = effectable.effects || []\n      return effects.map(effect => ({\n        ...effect,\n        parent: effectable,\n        multiplier: effectable.value,\n      }))\n    })\n    .flat()\n}\n\nexport const getEffect = (state, type) => {\n  return getEffects(state).filter(effect => effect.type === type)\n}\n\nexport const getNewUnlocks = state => {\n  const possibleUnlocks = [\n    ...state.resources,\n    ...state.buildings,\n    ...state.tabs,\n    ...state.jobs,\n    ...state.science,\n    ...state.commands,\n  ]\n\n  return possibleUnlocks.filter(\n    unlockable =>\n      !unlockable.unlockRequirements ||\n      !!getUnlock(state, unlockable.name) ||\n      Object.entries(unlockable.unlockRequirements).filter(([model, price]) => {\n        const possibleUnlock = possibleUnlocks.find(\n          ({ name }) => name === model\n        )\n        return possibleUnlock && possibleUnlock.value - price < 0\n      }).length === 0\n  )\n}\n\nexport const getMaxValue = (state, model) => {\n  if (typeof model.max !== 'number') {\n    return Number.MAX_SAFE_INTEGER\n  }\n  return (\n    model.max +\n    getEffect(state, '+max').reduce((total, effect) => {\n      const {\n        payload: { name, value },\n        multiplier,\n      } = effect\n      return name === model.name ? total + value * multiplier : total\n    }, 0)\n  )\n}\n\nexport const getNextCostForModel = (state, model) => {\n  const obj = {}\n  Object.entries(model.prices || {}).forEach(([resource, price]) => {\n    obj[resource] = price * Math.pow(model.ratio || 1.12, model.value)\n  })\n  return obj\n}\n\nexport const getCanAffordModel = (state, model) => {\n  return (\n    Object.entries(getNextCostForModel(state, model)).filter(\n      ([resourceName, prices]) => {\n        const resource = state.resources.find(\n          ({ name }) => name === resourceName\n        )\n        return resource.value - prices < 0\n      }\n    ).length === 0\n  )\n}\n","import { CHEAT_FACTOR } from './constants'\nimport { getUnlock, getMaxValue, getEffect, getModelIndex } from '../selectors'\n\nexport const getResource = (state, name) =>\n  getResources(state)[getModelIndex(state, 'resources', name)]\n\nexport const getResources = state =>\n  state.resources.map(resource => ({\n    ...resource,\n    max: getMaxValue(state, resource),\n  }))\n\nexport const getUnlockedResources = state =>\n  getResources(state).filter(({ name }) => !!getUnlock(state, name))\n\nexport const getEffectTotal = (state, effectName, instanceName) => {\n  const value = getEffect(state, effectName)\n    .filter(effect => effect.payload.name === instanceName)\n    .reduce(\n      (total, { payload: { value = 0 }, multiplier = 0 }) =>\n        total + value * multiplier,\n      0\n    )\n\n  return value === 0 ? 1 : value\n}\n\nconst getResourcesGainedPerTick = state => {\n  const obj = {}\n  const effects = getEffect(state, 'resourcePerTick').filter(\n    ({ parent }) => parent.value > 0\n  )\n  effects.forEach(\n    ({\n      parent,\n      payload: {\n        name: resourceName,\n        value,\n        useMultiplier = true,\n        integer = false,\n      },\n      multiplier,\n    }) => {\n      multiplier *= getEffectTotal(state, 'improveJob', parent.name)\n      if (integer) {\n        multiplier = Math.ceil(multiplier)\n      }\n      if (!useMultiplier) {\n        multiplier = 1\n      }\n      obj[resourceName] = obj[resourceName] || 0\n      obj[resourceName] += value * multiplier * CHEAT_FACTOR\n    }\n  )\n  return obj\n}\n\nexport const getResourceDiffPerTick = state => {\n  const obj = getResourcesGainedPerTick(state)\n  Object.entries(obj).forEach(([resourceName, value]) => {\n    const resource = getResource(state, resourceName)\n    if (resource.value + value > resource.max) {\n      obj[resourceName] = resource.max - resource.value\n    }\n    if (resource.value === 0 && value < 0) {\n      obj[resourceName] = 0\n    }\n  })\n  return obj\n}\n\nexport const getFoodDrain = state =>\n  Math.abs(\n    getEffect(state, 'resourcePerTick')\n      .filter(({ payload }) => payload.name === 'food' && payload.value < 0)\n      .reduce(\n        (total, { payload: { value }, multiplier }) =>\n          total + value * Math.ceil(multiplier),\n        0\n      )\n  ) * 5\n","import { getModelIndex, getMaxValue } from './selectors'\nimport data from './constants'\n\nconst clamp = (n, { min, max }) => Math.min(Math.max(n, min), max)\n\nexport const updateSlice = (key, updates, state, { negated } = {}) => {\n  const updateToPush = {\n    [key]: {},\n  }\n  Object.entries(updates).forEach(([resourceName, value]) => {\n    updateToPush[key][getModelIndex(state, key, resourceName)] = resource => ({\n      ...resource,\n      value: clamp(resource.value + (negated ? value * -1 : value), {\n        min: 0,\n        max: getMaxValue(state, resource),\n      }),\n    })\n  })\n  return updateToPush\n}\n\nexport const loadSlice = (key, payload) => {\n  const update = [...data[key]]\n  payload[key].forEach((model, index) => {\n    if (update[index]) {\n      update[index].value = model[1]\n    }\n  })\n  return update\n}\n\nexport const combineReducers = (reducers, initialState = {}) => {\n  return (state = initialState, action) => {\n    const nextReducers = {}\n    Object.entries(reducers).forEach(([key, reducer]) => {\n      nextReducers[key] = reducer(state, action)\n    })\n    return nextReducers\n  }\n}\n","import u from 'updeep'\nimport { getResourceDiffPerTick } from './selectors'\nimport { updateSlice, loadSlice } from '../utils'\n\nexport const updateResources = (...args) => updateSlice('resources', ...args)\n\nconst resourcesReducer = (state, { type, payload }) => {\n  if (type === 'LOAD') {\n    return loadSlice('resources', payload)\n  }\n\n  if (type === 'TICK') {\n    const perTick = getResourceDiffPerTick(state)\n    return u(updateResources(perTick, state), state).resources\n  }\n\n  if (type === 'UPDATE_RESOURCES') {\n    return u(updateResources(payload, state), state).resources\n  }\n\n  if (type === 'BUY_BUILDING' || type === 'BUY_SCIENCE') {\n    const obj = payload.building || payload\n    return u(updateResources(obj.prices, state, { negated: true }), state)\n      .resources\n  }\n\n  return state.resources\n}\n\nexport default resourcesReducer\n","import u from 'updeep'\nimport { updateSlice, loadSlice } from '../utils'\n\nconst updateBuildings = (...args) => updateSlice('buildings', ...args)\n\nconst buildingsReducer = (state, { type, payload }) => {\n  if (type === 'LOAD') {\n    return loadSlice('buildings', payload)\n  }\n\n  if (type === 'BUY_BUILDING') {\n    const { building, value } = payload\n    return u(updateBuildings({ [building.name]: value }, state), state)\n      .buildings\n  }\n  return state.buildings\n}\n\nexport default buildingsReducer\n","const commandsReducer = (state, action) => {\n  return state.commands\n}\nexport default commandsReducer\n","import u from 'updeep'\nimport { updateSlice, loadSlice } from '../utils'\n\nconst updateScience = (...args) => updateSlice('science', ...args)\n\nconst scienceReducer = (state, action) => {\n  if (action.type === 'LOAD') {\n    return loadSlice('science', action.payload)\n  }\n\n  if (action.type === 'BUY_SCIENCE') {\n    const { name } = action.payload\n    return u(updateScience({ [name]: 1 }, state), state).science\n  }\n  return state.science\n}\n\nexport default scienceReducer\n","import u from 'updeep'\nimport { updateSlice, loadSlice } from '../utils'\n\nconst updateJobs = (...args) => updateSlice('jobs', ...args)\n\nconst jobsReducer = (state, action) => {\n  if (action.type === 'LOAD') {\n    return loadSlice('jobs', action.payload)\n  }\n\n  if (action.type === 'UPDATE_JOBS') {\n    const { name, value } = action.payload\n    return u(updateJobs({ [name]: value }, state), state).jobs\n  }\n\n  return state.jobs\n}\n\nexport default jobsReducer\n","import data, { INITIAL_MODELS } from './constants'\nimport resources from './resources/reducer'\nimport buildings from './buildings/reducer'\nimport commands from './commands/reducer'\nimport science from './science/reducer'\nimport jobs from './jobs/reducer'\nimport u from 'updeep'\nimport { combineReducers } from './utils'\nimport { getNewUnlocks } from './selectors'\n\nexport const initialState = {\n  ...INITIAL_MODELS,\n  ...data,\n}\n\nconst tabs = state => state.tabs\n\nconst unlocks = (state, action) => {\n  //TODO: This shouldn't be here\n  if (action.type === 'SAVE') {\n    let obj = { ...INITIAL_MODELS }\n    obj.resources = state.resources.map(({ name, value }) => [name, value])\n    obj.buildings = state.buildings.map(({ name, value }) => [name, value])\n    obj.science = state.science.map(({ name, value }) => [name, value])\n    obj.jobs = state.jobs.map(({ name, value }) => [name, value])\n    obj.unlocks = state.unlocks\n    localStorage.setItem('save', JSON.stringify(obj))\n  }\n\n  if (action.type === 'LOAD') {\n    return u([...action.payload.unlocks], state.unlocks)\n  }\n\n  if (action.type === 'TICK') {\n    return u(getNewUnlocks(state), state.unlocks)\n  }\n\n  return state.unlocks\n}\n\nconst reducer = combineReducers(\n  { resources, commands, buildings, science, jobs, unlocks, tabs },\n  initialState\n)\n\nexport default reducer\n","import React, { createContext, useReducer, useEffect } from 'react'\nimport reducer, { initialState } from './reducer'\nimport { INITIAL_MODELS } from './constants'\n\nconst StoreContext = createContext(initialState)\n\nconst StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  useEffect(() => {\n    const saveString = localStorage.getItem('save')\n    const save = saveString ? JSON.parse(saveString) : { ...INITIAL_MODELS }\n\n    dispatch({ type: 'LOAD', payload: save })\n    setInterval(() => dispatch({ type: 'TICK' }), 200)\n    setInterval(() => dispatch({ type: 'SAVE' }), 200)\n  }, [])\n\n  return (\n    <StoreContext.Provider value={{ state, dispatch }}>\n      {children}\n    </StoreContext.Provider>\n  )\n}\n\nconst connect = (mapStateToProps, mapDispatchToProps) => Component => props => (\n  <StoreContext.Consumer>\n    {({ state, dispatch }) => (\n      <Component\n        {...props}\n        {...mapStateToProps(state, props)}\n        {...mapDispatchToProps(dispatch, props, state)}\n      />\n    )}\n  </StoreContext.Consumer>\n)\n\nexport { StoreContext, StoreProvider, connect }\n","import {\n  getModel,\n  getUnlock,\n  getNextCostForModel,\n  getCanAffordModel,\n  getMaxValue,\n} from '../selectors'\n\nexport const getBuilding = (state, name) => getModel(state, 'buildings', name)\n\nexport const getBuildings = state =>\n  state.buildings.map(building => ({\n    ...building,\n    prices: getNextCostForModel(state, building),\n    canAfford: getCanAffordModel(state, building),\n    max: getMaxValue(state, building),\n    isMaxed: getMaxValue(state, building) === building.value,\n  }))\n\nexport const getUnlockedBuildings = state =>\n  getBuildings(state).filter(({ name }) => !!getUnlock(state, name))\n","import { connect } from '../storeContext'\nimport React from 'react'\nimport { getUnlockedBuildings } from './selectors'\n\nconst mapStateToProps = state => ({\n  buildings: getUnlockedBuildings(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  buyBuilding: building =>\n    dispatch({ type: 'BUY_BUILDING', payload: { building, value: 1 } }),\n})\n\nconst BuildingsList = ({ tab, buildings, buyBuilding }) =>\n  buildings\n    .filter(building => !tab || building.tab === tab)\n    .map(building => (\n      <Building\n        key={building.name}\n        {...building}\n        canAfford={building.canAfford && !building.isMaxed}\n        onClick={() => building.canAfford && buyBuilding(building)}\n      />\n    ))\n\nconst Building = ({ name, max, value, onClick, canAfford, prices }) => (\n  <div className=\"button building\" onClick={onClick}>\n    <p style={{ color: canAfford ? 'white' : 'red' }}>\n      {name} ({value}/{max})\n    </p>\n    {Object.entries(prices).map(([resourceName, price]) => (\n      <p\n        key={`key-${resourceName}`}\n        style={{ color: canAfford ? 'white' : 'red' }}>\n        {resourceName}: {price.toFixed(2)}\n      </p>\n    ))}\n  </div>\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BuildingsList)\n","import { getEffect, getModel, getUnlock } from '../selectors'\nimport React from 'react'\n\nexport const getCommand = (state, name) => getModel(state, 'commands', name)\n\nexport const getCommands = state =>\n  state.commands.map(command => ({\n    ...command,\n    summary: getCommandSummary(state, command),\n    canAfford: getCommandAffordable(state, command),\n  }))\n\nexport const getUnlockedCommands = state =>\n  getCommands(state).filter(({ name }) => !!getUnlock(state, name))\n\nexport const getEffectsForCommand = (state, command) => {\n  const effect = getEffect(state, 'improveCommand').find(\n    e => e.payload.name === command.name\n  )\n  const upgradeValue = effect ? effect.payload.value * effect.multiplier : 1\n\n  return command.effects\n    .filter(({ type }) => type === 'updateResources')\n    .map(effect => {\n      let payload = { ...effect.payload }\n\n      Object.entries(payload).forEach(([resource, amount]) => {\n        payload[resource] = Array.isArray(amount) ? sample(amount) : amount\n        payload[resource] *= upgradeValue\n      })\n\n      return { type: 'UPDATE_RESOURCES', payload }\n    })\n}\n\nconst getCommandSummary = (state, command) => {\n  const upgradeValue = state.science\n    .filter(s => s.value > 0)\n    .map(s => s.effects.find(e => e.type === 'improveCommand'))\n    .filter(e => !!e)\n    .filter(e => e.payload.name === command.name)\n    .reduce((prev, effect) => prev * effect.payload.value, 1)\n\n  const data = command.effects\n    .filter(({ type }) => type === 'updateResources')\n    .map(effect =>\n      Object.entries(effect.payload).map(([name, value]) => {\n        if (!Array.isArray(value)) {\n          return `${name}: ${value * upgradeValue}`\n        }\n        const min = value[0] * upgradeValue\n        const max = value[value.length - 1] * upgradeValue\n        return (\n          <p>\n            {name}: {min} - {max}\n          </p>\n        )\n      })\n    )\n  return data\n}\n\nconst getCommandPrices = (state, command) => {\n  let prices = {}\n  let effects = command.effects || []\n  effects.forEach(effect => {\n    effect.payload &&\n      Object.entries(effect.payload).forEach(([resourceKey, price]) => {\n        if (price < 0) {\n          prices[resourceKey] = -price\n        }\n      })\n  })\n  return prices\n}\n\nconst getCommandAffordable = (state, command) => {\n  return (\n    Object.entries(getCommandPrices(state, command)).filter(\n      ([resourceName, prices]) => {\n        const resource = state.resources.find(\n          ({ name }) => name === resourceName\n        )\n        const value = resource.value - prices\n        return value < 0\n      }\n    ).length === 0\n  )\n}\n\nconst sample = arr => arr[Math.floor(Math.random() * arr.length)]\n","import { connect } from '../storeContext'\nimport React from 'react'\nimport { getEffectsForCommand, getUnlockedCommands } from './selectors'\n\nconst mapStateToProps = state => ({\n  commands: getUnlockedCommands(state),\n})\n\nconst mapDispatchToProps = (dispatch, props, state) => ({\n  triggerCommand: command => {\n    getEffectsForCommand(state, command).forEach(action => dispatch(action))\n  },\n})\n\nconst CommandsList = ({ tab, commands, triggerCommand }) => (\n  <div className=\"flex flex-column\">\n    {commands\n      .filter(command => command.tab === tab)\n      .map(command => (\n        <Command\n          key={`command-${command.name}`}\n          {...command}\n          onClick={() => triggerCommand(command)}\n        />\n      ))}\n  </div>\n)\n\nconst Command = ({\n  name,\n  onClick,\n  color = 'white',\n  summary,\n  canAfford = true,\n}) => (\n  <div onClick={canAfford && onClick} className=\"button command\">\n    <p style={{ color: canAfford ? color : 'red' }}>{name}</p>\n    {summary}\n  </div>\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CommandsList)\n","import { getModel, getUnlock, getMaxValue } from '../selectors'\nimport { getResource, getEffectTotal } from '../resources/selectors'\n\nexport const getJob = (state, name) => getModel(state, 'jobs', name)\n\nexport const getJobs = state =>\n  state.jobs.map(job => ({\n    ...job,\n    max: getMaxValue(state, job),\n    summary: getJobSummary(state, job),\n    canAfford: getAvailableWorkers(state) > 0,\n  }))\n\nexport const getUnlockedJobs = state =>\n  getJobs(state).filter(({ name }) => !!getUnlock(state, name))\n\nexport const getTotalWorkers = state => {\n  const num = getResource(state, 'folks').value\n\n  return num < 1 && num > 0 ? 1 : parseInt(num)\n}\n\nexport const getNumWorkers = state =>\n  state.jobs.reduce((prev, curr) => prev + curr.value, 0)\n\nexport const getAvailableWorkers = state =>\n  getTotalWorkers(state) - getNumWorkers(state)\n\nconst getJobSummary = (state, job) => {\n  return `${job.effects\n    .filter(({ type }) => type === 'resourcePerTick')\n    .map(({ payload }) => {\n      const multiplier = getEffectTotal(state, 'improveJob', job.name)\n      return `${(payload.value * 5 * multiplier).toFixed(2)} ${\n        payload.name\n      } /sec`\n    })}`\n}\n","import { getFoodDrain } from './../resources/selectors'\nimport { connect } from '../storeContext'\nimport React from 'react'\nimport {\n  getUnlockedJobs,\n  getAvailableWorkers,\n  getTotalWorkers,\n} from './selectors'\n\nconst mapStateToProps = state => ({\n  jobs: getUnlockedJobs(state),\n  availableWorkers: getAvailableWorkers(state),\n  totalWorkers: getTotalWorkers(state),\n  foodDrain: getFoodDrain(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  updateJobs: job => dispatch({ type: 'UPDATE_JOBS', payload: job }),\n})\n\nconst JobsList = ({\n  jobs,\n  tab,\n  updateJobs,\n  availableWorkers,\n  totalWorkers,\n  foodDrain,\n}) => {\n  if (\n    totalWorkers === 0 ||\n    jobs.filter(job => !tab || job.tab === tab).length === 0\n  ) {\n    return false\n  }\n\n  return (\n    <>\n      <p>\n        Available workers: {availableWorkers}/{totalWorkers}\n      </p>\n      <p>Food drain: {foodDrain.toFixed(2)}</p>\n      {jobs\n        .filter(job => !tab || job.tab === tab)\n        .map(job => (\n          <Job\n            key={job.name}\n            {...job}\n            updateJobs={value => updateJobs({ name: job.name, value })}\n          />\n        ))}\n    </>\n  )\n}\n\nconst Job = ({ name, max, value, updateJobs, canAfford, summary }) => (\n  <div\n    className=\"flex justify-between align-center job\"\n    style={{ opacity: value === max ? 0.5 : 1 }}>\n    <p style={{ color: canAfford ? 'white' : 'red' }}>\n      {name} ({value}\n      {max < 1000 ? `/${max}` : ''})\n    </p>\n    <p>{summary}</p>\n    <div className=\"flex\">\n      <div\n        className=\"button small\"\n        onClick={() => canAfford && updateJobs(1)}\n        style={{ marginRight: 10 }}>\n        <span>+</span>\n      </div>\n      <div className=\"button small\" onClick={() => updateJobs(-1)}>\n        <span>-</span>\n      </div>\n    </div>\n  </div>\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobsList)\n","import { getModel, getUnlock, getNextCostForModel } from '../selectors'\n\nexport const getSciences = state =>\n  state.science.map(science => ({\n    ...science,\n    summary: getScienceSummary(state, science),\n    canAfford: getScienceAffordable(state, science),\n    isPurchased: science.value > 0 && science.max === 1,\n    prices: getNextCostForModel(state, science),\n  }))\n\nexport const getScience = (state, name) => getModel(state, 'science', name)\n\nexport const getUnlockedScience = state =>\n  getSciences(state)\n    .filter(({ name }) => !!getUnlock(state, name))\n    .filter(science => !science.max || science.value < science.max)\n\nconst getScienceAffordable = (state, science) => {\n  return (\n    (!science.max || science.value < science.max) &&\n    Object.entries(getNextCostForModel(state, science)).filter(\n      ([resourceName, prices]) => {\n        const resource = state.resources.find(\n          ({ name }) => name === resourceName\n        )\n        return resource.value - prices < 0\n      }\n    ).length === 0\n  )\n}\n\nconst getScienceSummary = (state, science) => {\n  return science.effects\n    .map(effect => `${effect.payload.name} value * ${effect.payload.value}`)\n    .join('')\n}\n","import { connect } from '../storeContext'\nimport React from 'react'\nimport { getUnlockedScience } from './selectors'\n\nconst mapStateToProps = state => ({\n  science: getUnlockedScience(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  buyScience: ({ name, prices }) =>\n    dispatch({ type: 'BUY_SCIENCE', payload: { name, prices } }),\n})\n\nconst ScienceView = ({ tab, science, buyScience }) => {\n  if (science.length === 0) {\n    return false\n  }\n\n  return (\n    <>\n      <p>Research</p>\n      {science\n        .filter(science => science.tab === tab)\n        .map(science => (\n          <ScienceItem\n            key={science.name}\n            {...science}\n            onClick={() => science.canAfford && buyScience(science)}\n          />\n        ))}\n    </>\n  )\n}\n\nconst ScienceItem = ({\n  name,\n  value,\n  labels,\n  isPurchased,\n  onClick,\n  canAfford,\n  summary,\n  prices,\n}) => (\n  <div\n    className=\"button building\"\n    onClick={onClick}\n    style={{ opacity: isPurchased ? 0.5 : 1 }}>\n    <p style={{ color: !canAfford && !isPurchased ? 'red' : 'white' }}>\n      {labels[value] || `${name}${value}`}\n    </p>\n    {!isPurchased &&\n      Object.entries(prices).map(([resourceName, price]) => (\n        <p\n          key={`key-${resourceName}`}\n          style={{ color: !canAfford && !isPurchased ? 'red' : 'white' }}>\n          {resourceName}: {price.toFixed(2)}\n        </p>\n      ))}\n    <p>{summary}</p>\n  </div>\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ScienceView)\n","import React from 'react'\nimport Buildings from '../buildings/BuildingList'\nimport Commands from '../commands/CommandList'\nimport Jobs from '../jobs/JobList'\nimport Science from '../science/ScienceList'\n\nconst forestView = () => {\n  return (\n    <>\n      <Commands tab=\"forest\" />\n      <Buildings tab=\"forest\" />\n      <Jobs tab=\"forest\" />\n      <Science tab=\"forest\" />\n    </>\n  )\n}\n\nexport default forestView\n","import React from 'react'\nimport Buildings from '../buildings/BuildingList'\nimport Commands from '../commands/CommandList'\nimport Jobs from '../jobs/JobList'\nimport Science from '../science/ScienceList'\n\nconst FieldView = () => (\n  <>\n    <Commands tab=\"field\" />\n    <Buildings tab=\"field\" />\n    <Jobs tab=\"field\" />\n    <Science tab=\"field\" />\n  </>\n)\n\nexport default FieldView\n","import React from 'react'\nimport Buildings from '../buildings/BuildingList'\nimport Commands from '../commands/CommandList'\nimport Jobs from '../jobs/JobList'\nimport Science from '../science/ScienceList'\n\nconst hillView = () => {\n  return (\n    <>\n      <Commands tab=\"hill\" />\n      <Buildings tab=\"hill\" />\n      <Jobs tab=\"hill\" />\n      <Science tab=\"hill\" />\n    </>\n  )\n}\n\nexport default hillView\n","import { connect } from '../storeContext'\nimport React from 'react'\nimport { getResourceDiffPerTick, getUnlockedResources } from './selectors'\n\nconst mapStateToProps = state => ({\n  resources: getUnlockedResources(state),\n  perTick: getResourceDiffPerTick(state),\n  unlocks: state.unlocks,\n})\n\nconst mapDispatchToProps = dispatch => ({})\n\nconst ResourcesList = ({ unlocks, resources, perTick }) => (\n  <div className=\"flex flex-column\">\n    {resources.map(resource => (\n      <Resource\n        key={`resource-${resource.name}`}\n        {...resource}\n        perSecond={(perTick[resource.name] || 0) * 5}\n      />\n    ))}\n  </div>\n)\n\nconst Resource = ({ name, value, max, color, perSecond }) => (\n  <div className=\"flex flex-row\" style={{ marginTop: 10 }}>\n    <div>\n      <p style={{ color }}>{name}:</p>\n    </div>\n    <div style={{ marginLeft: 5 }}>\n      <div className=\"flex flex-row align-center\">\n        <p>\n          {value.toFixed(2)}\n          <span style={{ color: '#aaa' }}> /{max}</span>\n        </p>\n      </div>\n      {perSecond !== 0 && (\n        <p style={{ marginLeft: -5, fontSize: 11 }}>\n          {perSecond > 0 && '+'}\n          {perSecond.toFixed(2)}/sec\n        </p>\n      )}\n    </div>\n  </div>\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResourcesList)\n","import { getModel, getUnlock } from '../selectors'\n\nexport const getTabs = state => state.tabs\n\nexport const getTab = (state, name) => getModel(state, 'tabs', name)\n\nexport const getUnlockedTabs = state =>\n  getTabs(state).filter(({ name }) => !!getUnlock(state, name))\n","import React from 'react'\nimport { connect } from '../storeContext'\nimport { Link } from 'react-router-dom'\nimport { getUnlockedTabs } from './selectors'\n\nconst mapStateToProps = state => ({\n  tabs: getUnlockedTabs(state),\n})\n\nconst mapDispatchToProps = dispatch => ({})\n\n// TODO Labels should change based on level of related resources\nconst TabList = ({ tabs }) => (\n  <div className=\"flex flex-column\">\n    {tabs.map(tab => (\n      <Link key={`link-${tab.name}`} to={`/${tab.url}`}>\n        {tab.name}\n      </Link>\n    ))}\n    <Link\n      to=\"\"\n      onClick={() => {\n        const shouldReset = window.confirm('sure?')\n\n        if (shouldReset) {\n          localStorage.removeItem('save')\n          document.location.reload()\n        }\n      }}>\n      reset\n    </Link>\n  </div>\n)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabList)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\n\nimport Forest from './tabs/ForestView'\nimport Field from './tabs/FieldView'\nimport Hill from './tabs/HillView'\nimport Resources from './resources/ResourceList'\nimport TabList from './tabs/TabList'\nimport { StoreProvider } from './storeContext'\nimport './index.css'\n\nReactDOM.render(\n  <StoreProvider>\n    <Router>\n      <div className=\"flex flex-row height-100\">\n        <div className=\"flex flex-column\" style={{ flex: 1, padding: 10 }}>\n          <TabList />\n          <Resources />\n        </div>\n        <div style={{ flex: 2, padding: 10 }}>\n          <div>\n            <Route exact path=\"/\" component={Forest} />\n            <Route exact path=\"/field\" component={Field} />\n            <Route exact path=\"/hill\" component={Hill} />\n          </div>\n        </div>\n      </div>\n    </Router>\n  </StoreProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}